name: CI

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and push docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: cr.yandex
          username: oauth
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          provenance: false
      - name: Build and push nginx image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: nginx/Dockerfile
          push: true
          tags: cr.yandex/${{ secrets.CONTAINER_REGISTRY_ID }}/nginx:latest
      - name: Build and push server image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile.server
          push: true
          tags: cr.yandex/${{ secrets.CONTAINER_REGISTRY_ID }}/server:latest

  deploy:
    name: Deploy
    needs: [ build-and-push ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Copy docker-compose.yml
        uses: garygrossgarten/github-action-scp@release
        with:
          local: docker-compose.yml
          remote: ${{ vars.DEPLOY_PATH }}/docker-compose.yml
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ vars.DEPLOY_USERNAME }}
          port: ${{ secrets.DEPLOY_PORT }}
          privateKey: ${{ secrets.DEPLOY_SSH_KEY }}
      - name: Copy .env
        uses: garygrossgarten/github-action-scp@release
        with:
          local: .env.sample
          remote: ${{ vars.DEPLOY_PATH }}/.env
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ vars.DEPLOY_USERNAME }}
          port: ${{ secrets.DEPLOY_PORT }}
          privateKey: ${{ secrets.DEPLOY_SSH_KEY }}
      - name: Pull and start womba
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ vars.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: ${{ secrets.DEPLOY_PORT }}
          script: |
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin cr.yandex
            cd ${{ vars.DEPLOY_PATH }}
            sudo docker system prune -af
            sudo docker-compose pull
            sudo docker-compose up nginx server postgres

version: "3.9"

services:
    postgres:
        container_name: postgres
        image: postgres:15-alpine
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 5
        ports:
            - "${POSTGRES_PORT}:${POSTGRES_PORT}"
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_HOST_AUTH_METHOD: password
        volumes:
            - ./tmp/pgdata:/var/lib/postgresql/data
        networks:
            - wombaNet

    nginx:
        container_name: prakticum-nginx
        build: ./nginx
        ports:
            - "80:80"
            - "443:443"
        expose:
            - "80"
            - "443"
        env_file:
            - .env
        volumes:
            - ./nginx/ssl:/etc/nginx/ssl
            - ./nginx/logs:/var/log/nginx
        restart: always
        depends_on:
            - server
        networks:
            - wombaNet

    server:
        container_name: prakticum-server
        image: prackicum-server
        build:
            context: .
            dockerfile: Dockerfile.server
            args:
                SERVER_PORT: ${SERVER_PORT}
        restart: always
        ports:
            - "${SERVER_PORT}:${SERVER_PORT}"
        environment:
            SERVER_PORT: ${SERVER_PORT}
        env_file:
            - .env
        depends_on:
            postgres:
                condition: service_healthy
        networks:
            - wombaNet

networks:
    wombaNet:
        driver: bridge
